info:
  description: Spring Cloud Samples
  url: https://github.com/spring-cloud-samples

server:
  port: 8081

---
spring:
  profiles: cloud
  cloud:
    config:
      uri: ${vcap.services.${PREFIX:}configserver.credentials.uri:http://${PREFIX:}${configserver.${application.domain:cfapps.io}}}
cloudfoundry:
  sso:
    tokenUri: ${vcap.services.${PREFIX:}uaa.credentials.tokenUri:}
    authorizationUri: ${vcap.services.${PREFIX:}uaa.credentials.authorizationUri:}
    tokenInfoUri: ${vcap.services.${PREFIX:}uaa.credentials.tokenInfoUri:}
    clientId: ${vcap.services.${PREFIX:}uaa.credentials.clientId:}
    clientSecret: ${vcap.services.${PREFIX:}uaa.credentials.clientSecret:}
  resource:
    tokenInfoUri: ${vcap.services.${PREFIX:}resource.credentials.tokenInfoUri:}
    clientId: ${vcap.services.${PREFIX:}resource.credentials.clientId:}
    clientSecret: ${vcap.services.${PREFIX:}resource.credentials.clientSecret:}
    serviceId: ${PREFIX:}resource
application:
  domain: ${APPLICATION_DOMAIN:cfapps.io}
endpoints:
  restart: enabled
eureka:
  instance:
    hostname: ${PREFIX:}${spring.application.name}.${application.domain:cfapps.io}
    nonSecurePort: 80
  client:
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/

---
spring:
  profiles: docker
  cloud:
    config:
      uri: http://${CONFIGSERVER_1_PORT_8888_TCP_ADDR:localhost}:8888
endpoints:
  restart: enabled
eureka:
  instance:
    nonSecurePort: 80
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_1_PORT_8761_TCP_ADDR:localhost}:8761/eureka/
